{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useHttp } from \"../hooks/http.hook\";\nconst useWeatherService = () => {\n  _s();\n  const {\n    request\n  } = useHttp();\n  const __apiKey = 'EUHRQXCFA9JUS3FDZQDZJTYQW';\n  const getForecast = async _ref => {\n    let {\n      city,\n      date1,\n      date2\n    } = _ref;\n    const res = await request(`https://weather.visualcrossing.com/VisualCrossingWebServices/rest/services/timeline/${city}/${date1}/${date2}?unitGroup=metric&include=days&key=${__apiKey}&contentType=json`);\n    return res;\n  };\n  const getTodaysWeather = async city => {\n    const res = await request(`https://weather.visualcrossing.com/VisualCrossingWebServices/rest/services/timeline/${city}/today?unitGroup=metric&include=days&key=${__apiKey}&contentType=json`);\n    return res;\n  };\n  return {\n    getForecast,\n    getTodaysWeather\n  };\n};\n_s(useWeatherService, \"RW8wnHyYfz8NPGbFIKoeRRKoej8=\", false, function () {\n  return [useHttp];\n});\nexport default useWeatherService;","map":{"version":3,"names":["useHttp","useWeatherService","_s","request","__apiKey","getForecast","_ref","city","date1","date2","res","getTodaysWeather"],"sources":["/home/oleg/test_zadaniye/Reenbit/weather-app/src/services/WeatherService.js"],"sourcesContent":["import { useHttp } from \"../hooks/http.hook\";\n\nconst useWeatherService = () => {\n    const { request } = useHttp();\n    const __apiKey = 'EUHRQXCFA9JUS3FDZQDZJTYQW'\n\n    const getForecast = async ({ city, date1, date2 }) => {\n        const res = await request(`https://weather.visualcrossing.com/VisualCrossingWebServices/rest/services/timeline/${city}/${date1}/${date2}?unitGroup=metric&include=days&key=${__apiKey}&contentType=json`)\n        return res\n    }\n\n    const getTodaysWeather = async (city) => {\n        const res = await request(`https://weather.visualcrossing.com/VisualCrossingWebServices/rest/services/timeline/${city}/today?unitGroup=metric&include=days&key=${__apiKey}&contentType=json`)\n        return res\n    }\n\n    return {\n        getForecast,\n        getTodaysWeather\n    }\n}\n\nexport default useWeatherService;"],"mappings":";AAAA,SAASA,OAAO,QAAQ,oBAAoB;AAE5C,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM;IAAEC;EAAQ,CAAC,GAAGH,OAAO,EAAE;EAC7B,MAAMI,QAAQ,GAAG,2BAA2B;EAE5C,MAAMC,WAAW,GAAG,MAAAC,IAAA,IAAkC;IAAA,IAA3B;MAAEC,IAAI;MAAEC,KAAK;MAAEC;IAAM,CAAC,GAAAH,IAAA;IAC7C,MAAMI,GAAG,GAAG,MAAMP,OAAO,CAAE,uFAAsFI,IAAK,IAAGC,KAAM,IAAGC,KAAM,sCAAqCL,QAAS,mBAAkB,CAAC;IACzM,OAAOM,GAAG;EACd,CAAC;EAED,MAAMC,gBAAgB,GAAG,MAAOJ,IAAI,IAAK;IACrC,MAAMG,GAAG,GAAG,MAAMP,OAAO,CAAE,uFAAsFI,IAAK,4CAA2CH,QAAS,mBAAkB,CAAC;IAC7L,OAAOM,GAAG;EACd,CAAC;EAED,OAAO;IACHL,WAAW;IACXM;EACJ,CAAC;AACL,CAAC;AAAAT,EAAA,CAlBKD,iBAAiB;EAAA,QACCD,OAAO;AAAA;AAmB/B,eAAeC,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}