{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useHttp } from \"../hooks/http.hook\";\nconst useWeatherService = () => {\n  _s();\n  const {\n    request\n  } = useHttp();\n  const __apiKey = 'd34b55b925e7592ecfd64dc1574d6f2b';\n  const __googleApiKey = 'AIzaSyB57FMnwo8xrc4Ptm0s6K0-7yt7YtHOvV4';\n  const getForecast = async (latitude, longitude) => {\n    const res = await request(`https://api.openweathermap.org/data/2.5/forecast?lat=${latitude}&lon=${longitude}&appid=${__apiKey}`);\n    return {\n      city: res.city.name,\n      weather: res.list.map(_transformLocation)\n    };\n  };\n  const getLocationByCity = async city => {\n    const res = await request(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${__apiKey}`);\n    return {\n      \"lon\": res.coord.lon,\n      'lat': res.coord.lat\n    };\n  };\n  const _transformLocation = item => {\n    return {\n      weather: item.weather[0].main,\n      temperature: Math.floor(item.main.temp - 273.15),\n      precipitation: item.pop,\n      humidity: item.main.humidity,\n      wind: item.wind.speed,\n      icon: item.weather[0].icon\n    };\n  };\n  return {\n    getForecast,\n    getLocationByCity\n  };\n};\n_s(useWeatherService, \"Cd6rTTFIaDkCOxqWEjU2WwhZI/U=\", false, function () {\n  return [useHttp];\n});\nexport default useWeatherService;","map":{"version":3,"names":["useHttp","useWeatherService","_s","request","__apiKey","__googleApiKey","getForecast","latitude","longitude","res","city","name","weather","list","map","_transformLocation","getLocationByCity","coord","lon","lat","item","main","temperature","Math","floor","temp","precipitation","pop","humidity","wind","speed","icon"],"sources":["/home/oleg/bank-app/src/services/WeatherService.js"],"sourcesContent":["import { useHttp } from \"../hooks/http.hook\";\n\nconst useWeatherService = () => {\n    const {request} = useHttp();\n    const __apiKey = 'd34b55b925e7592ecfd64dc1574d6f2b'\n    const __googleApiKey = 'AIzaSyB57FMnwo8xrc4Ptm0s6K0-7yt7YtHOvV4'\n\n    const getForecast = async (latitude, longitude) => {\n        const res = await request(`https://api.openweathermap.org/data/2.5/forecast?lat=${latitude}&lon=${longitude}&appid=${__apiKey}`)\n        return { city: res.city.name, weather: res.list.map(_transformLocation)}\n    }\n\n    const getLocationByCity = async (city) => {\n        const res = await request(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${__apiKey}`)\n        return { \"lon\": res.coord.lon, 'lat': res.coord.lat}\n    }\n\n    const _transformLocation = (item) => {\n        return {\n            weather: item.weather[0].main,\n            temperature: Math.floor(item.main.temp - 273.15),\n            precipitation: item.pop,\n            humidity: item.main.humidity,\n            wind: item.wind.speed,\n            icon: item.weather[0].icon\n        }\n    }\n    return {\n        getForecast,\n        getLocationByCity\n    }\n}\n\nexport default useWeatherService;"],"mappings":";AAAA,SAASA,OAAO,QAAQ,oBAAoB;AAE5C,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM;IAACC;EAAO,CAAC,GAAGH,OAAO,EAAE;EAC3B,MAAMI,QAAQ,GAAG,kCAAkC;EACnD,MAAMC,cAAc,GAAG,yCAAyC;EAEhE,MAAMC,WAAW,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,SAAS,KAAK;IAC/C,MAAMC,GAAG,GAAG,MAAMN,OAAO,CAAE,wDAAuDI,QAAS,QAAOC,SAAU,UAASJ,QAAS,EAAC,CAAC;IAChI,OAAO;MAAEM,IAAI,EAAED,GAAG,CAACC,IAAI,CAACC,IAAI;MAAEC,OAAO,EAAEH,GAAG,CAACI,IAAI,CAACC,GAAG,CAACC,kBAAkB;IAAC,CAAC;EAC5E,CAAC;EAED,MAAMC,iBAAiB,GAAG,MAAON,IAAI,IAAK;IACtC,MAAMD,GAAG,GAAG,MAAMN,OAAO,CAAE,qDAAoDO,IAAK,UAASN,QAAS,EAAC,CAAC;IACxG,OAAO;MAAE,KAAK,EAAEK,GAAG,CAACQ,KAAK,CAACC,GAAG;MAAE,KAAK,EAAET,GAAG,CAACQ,KAAK,CAACE;IAAG,CAAC;EACxD,CAAC;EAED,MAAMJ,kBAAkB,GAAIK,IAAI,IAAK;IACjC,OAAO;MACHR,OAAO,EAAEQ,IAAI,CAACR,OAAO,CAAC,CAAC,CAAC,CAACS,IAAI;MAC7BC,WAAW,EAAEC,IAAI,CAACC,KAAK,CAACJ,IAAI,CAACC,IAAI,CAACI,IAAI,GAAG,MAAM,CAAC;MAChDC,aAAa,EAAEN,IAAI,CAACO,GAAG;MACvBC,QAAQ,EAAER,IAAI,CAACC,IAAI,CAACO,QAAQ;MAC5BC,IAAI,EAAET,IAAI,CAACS,IAAI,CAACC,KAAK;MACrBC,IAAI,EAAEX,IAAI,CAACR,OAAO,CAAC,CAAC,CAAC,CAACmB;IAC1B,CAAC;EACL,CAAC;EACD,OAAO;IACHzB,WAAW;IACXU;EACJ,CAAC;AACL,CAAC;AAAAd,EAAA,CA7BKD,iBAAiB;EAAA,QACDD,OAAO;AAAA;AA8B7B,eAAeC,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}