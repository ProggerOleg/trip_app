{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useHttp } from \"../hooks/http.hook\";\nconst useWeatherService = () => {\n  _s();\n  const {\n    request\n  } = useHttp();\n  const __apiKey = 'EUHRQXCFA9JUS3FDZQDZJTYQW';\n  const getForecast = async (city, date1, date2) => {\n    const res = await request(`https://weather.visualcrossing.com/VisualCrossingWebServices/rest/services/timeline/${city}/${date1}/${date2}?unitGroup=metric&include=days&key=${__apiKey}&contentType=json`);\n    return res;\n  };\n  const getTodaysWeather = async city => {\n    const res = await request(`https://weather.visualcrossing.com/VisualCrossingWebServices/rest/services/timeline/${city}/today?unitGroup=metric&include=days&key=${__apiKey}&contentType=json`);\n    return {\n      \"lon\": res.coord.lon,\n      'lat': res.coord.lat\n    };\n  };\n  const _transformWeather = item => {\n    return {};\n  };\n  return {\n    getForecast,\n    getTodaysWeather\n  };\n};\n_s(useWeatherService, \"Cd6rTTFIaDkCOxqWEjU2WwhZI/U=\", false, function () {\n  return [useHttp];\n});\nexport default useWeatherService;","map":{"version":3,"names":["useHttp","useWeatherService","_s","request","__apiKey","getForecast","city","date1","date2","res","getTodaysWeather","coord","lon","lat","_transformWeather","item"],"sources":["/home/oleg/test_zadaniye/Reenbit/weather-app/src/services/WeatherService.js"],"sourcesContent":["import { useHttp } from \"../hooks/http.hook\";\n\nconst useWeatherService = () => {\n    const {request} = useHttp();\n    const __apiKey = 'EUHRQXCFA9JUS3FDZQDZJTYQW'\n\n    const getForecast = async (city, date1, date2) => {\n        const res = await request(`https://weather.visualcrossing.com/VisualCrossingWebServices/rest/services/timeline/${city}/${date1}/${date2}?unitGroup=metric&include=days&key=${__apiKey}&contentType=json`)\n        return res\n    }\n\n    const getTodaysWeather = async (city) => {\n        const res = await request(`https://weather.visualcrossing.com/VisualCrossingWebServices/rest/services/timeline/${city}/today?unitGroup=metric&include=days&key=${__apiKey}&contentType=json`)\n        return { \"lon\": res.coord.lon, 'lat': res.coord.lat}\n    }\n\n    const _transformWeather = (item) => {\n        return {\n            \n        }\n    }\n\n    return {\n        getForecast,\n        getTodaysWeather\n    }\n}\n\nexport default useWeatherService;"],"mappings":";AAAA,SAASA,OAAO,QAAQ,oBAAoB;AAE5C,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM;IAACC;EAAO,CAAC,GAAGH,OAAO,EAAE;EAC3B,MAAMI,QAAQ,GAAG,2BAA2B;EAE5C,MAAMC,WAAW,GAAG,MAAAA,CAAOC,IAAI,EAAEC,KAAK,EAAEC,KAAK,KAAK;IAC9C,MAAMC,GAAG,GAAG,MAAMN,OAAO,CAAE,uFAAsFG,IAAK,IAAGC,KAAM,IAAGC,KAAM,sCAAqCJ,QAAS,mBAAkB,CAAC;IACzM,OAAOK,GAAG;EACd,CAAC;EAED,MAAMC,gBAAgB,GAAG,MAAOJ,IAAI,IAAK;IACrC,MAAMG,GAAG,GAAG,MAAMN,OAAO,CAAE,uFAAsFG,IAAK,4CAA2CF,QAAS,mBAAkB,CAAC;IAC7L,OAAO;MAAE,KAAK,EAAEK,GAAG,CAACE,KAAK,CAACC,GAAG;MAAE,KAAK,EAAEH,GAAG,CAACE,KAAK,CAACE;IAAG,CAAC;EACxD,CAAC;EAED,MAAMC,iBAAiB,GAAIC,IAAI,IAAK;IAChC,OAAO,CAEP,CAAC;EACL,CAAC;EAED,OAAO;IACHV,WAAW;IACXK;EACJ,CAAC;AACL,CAAC;AAAAR,EAAA,CAxBKD,iBAAiB;EAAA,QACDD,OAAO;AAAA;AAyB7B,eAAeC,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}