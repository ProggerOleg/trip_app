{"ast":null,"code":"var _jsxFileName = \"/home/oleg/test_zadaniye/Reenbit/weather-app/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './components/app/App';\nimport { Component } from 'react';\nimport { GoogleOAuthProvider } from '@react-oauth/google';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst root = ReactDOM.createRoot(document.getElementById('root'));\n\n// class GoogleAuth extends Component {\n//   componentDidMount() {\n//     const _onInit = auth2 => {\n//       console.log('init OK', auth2)\n//     }\n//     const _onError = err => {\n//       console.log('error', err)\n//     }\n//     window.gapi.load('auth2', function () {\n//       window.gapi.auth2\n//         .init({ // не забудьте указать ваш ключ в .env\n//           client_id:\n//             \"955108822743-99vrrda1gvr7t0es0g5ooe3dov0tjuo6.apps.googleusercontent.com\"\n//         })\n//         .then(_onInit, _onError)\n//     })\n//   }\n//   signIn = () => {\n//     const auth2 = window.gapi.auth2.getAuthInstance()\n//     auth2.signIn().then(googleUser => {\n\n//       // метод возвращает объект пользователя\n//       // где есть все необходимые нам поля\n//       const profile = googleUser.getBasicProfile()\n//       console.log('ID: ' + profile.getId()) // не посылайте подобную информацию напрямую, на ваш сервер!\n//       console.log('Full Name: ' + profile.getName())\n//       console.log('Given Name: ' + profile.getGivenName())\n//       console.log('Family Name: ' + profile.getFamilyName())\n//       console.log('Image URL: ' + profile.getImageUrl())\n//       console.log('Email: ' + profile.getEmail())\n\n//       // токен\n//       const id_token = googleUser.getAuthResponse().id_token\n//       console.log('ID Token: ' + id_token)\n//     })\n//   }\n//   signOut = () => {\n//     const auth2 = window.gapi.auth2.getAuthInstance()\n//     auth2.signOut().then(function () {\n//       console.log('User signed out.')\n//     })\n//   }\n//   render() {\n//     return (\n//       <div className=\"App\">\n//         <header className=\"App-header\">\n//           <button onClick={this.signIn}>Log in</button>\n//           <button onClick={this.signOut}>Log out</button>\n//         </header>\n//       </div>\n//     )\n//   }\n// }\n\nexport default App;\nroot.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 66,\n  columnNumber: 3\n}, this));","map":{"version":3,"names":["React","ReactDOM","App","Component","GoogleOAuthProvider","jsxDEV","_jsxDEV","root","createRoot","document","getElementById","render","StrictMode","children","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/home/oleg/test_zadaniye/Reenbit/weather-app/src/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './components/app/App';\nimport { Component } from 'react';\nimport { GoogleOAuthProvider } from '@react-oauth/google'\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\n\n// class GoogleAuth extends Component {\n//   componentDidMount() {\n//     const _onInit = auth2 => {\n//       console.log('init OK', auth2)\n//     }\n//     const _onError = err => {\n//       console.log('error', err)\n//     }\n//     window.gapi.load('auth2', function () {\n//       window.gapi.auth2\n//         .init({ // не забудьте указать ваш ключ в .env\n//           client_id:\n//             \"955108822743-99vrrda1gvr7t0es0g5ooe3dov0tjuo6.apps.googleusercontent.com\"\n//         })\n//         .then(_onInit, _onError)\n//     })\n//   }\n//   signIn = () => {\n//     const auth2 = window.gapi.auth2.getAuthInstance()\n//     auth2.signIn().then(googleUser => {\n\n//       // метод возвращает объект пользователя\n//       // где есть все необходимые нам поля\n//       const profile = googleUser.getBasicProfile()\n//       console.log('ID: ' + profile.getId()) // не посылайте подобную информацию напрямую, на ваш сервер!\n//       console.log('Full Name: ' + profile.getName())\n//       console.log('Given Name: ' + profile.getGivenName())\n//       console.log('Family Name: ' + profile.getFamilyName())\n//       console.log('Image URL: ' + profile.getImageUrl())\n//       console.log('Email: ' + profile.getEmail())\n\n//       // токен\n//       const id_token = googleUser.getAuthResponse().id_token\n//       console.log('ID Token: ' + id_token)\n//     })\n//   }\n//   signOut = () => {\n//     const auth2 = window.gapi.auth2.getAuthInstance()\n//     auth2.signOut().then(function () {\n//       console.log('User signed out.')\n//     })\n//   }\n//   render() {\n//     return (\n//       <div className=\"App\">\n//         <header className=\"App-header\">\n//           <button onClick={this.signIn}>Log in</button>\n//           <button onClick={this.signOut}>Log out</button>\n//         </header>\n//       </div>\n//     )\n//   }\n// }\n\nexport default App\nroot.render(\n  <React.StrictMode>\n    <App />\n\n\n  </React.StrictMode>\n);\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAO,aAAa;AACpB,OAAOC,GAAG,MAAM,sBAAsB;AACtC,SAASC,SAAS,QAAQ,OAAO;AACjC,SAASC,mBAAmB,QAAQ,qBAAqB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzD,MAAMC,IAAI,GAAGN,QAAQ,CAACO,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;;AAEjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAeR,GAAG;AAClBK,IAAI,CAACI,MAAM,eACTL,OAAA,CAACN,KAAK,CAACY,UAAU;EAAAC,QAAA,eACfP,OAAA,CAACJ,GAAG;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA;AAAG;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,QAGU,CACpB"},"metadata":{},"sourceType":"module","externalDependencies":[]}