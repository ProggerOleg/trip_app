{"ast":null,"code":"var _jsxFileName = \"/home/oleg/bank-app/src/components/searchCity/SearchCity.js\",\n  _s = $RefreshSig$();\nimport './SearchCity.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faLocationDot, faMagnifyingGlass } from '@fortawesome/free-solid-svg-icons';\nimport fontawesome from '@fortawesome/fontawesome';\nimport { useState, useEffect } from 'react';\nimport useWeatherService from '../../services/WeatherService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfontawesome.library.add(faLocationDot, faMagnifyingGlass);\nconst SearchCity = () => {\n  _s();\n  const [location, setLocation] = useState('Paris');\n  const {\n    getUsersLocation,\n    getLocationByCity\n  } = useWeatherService();\n  const getLocation = () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        setLocation({\n          latitude: position.coords.latitude,\n          longitude: position.coords.longitude\n        });\n      }, error => {\n        console.log(error);\n      });\n    } else {\n      console.log('Geolocation is not supported by this browser.');\n    }\n    if (location.latitude && location.longitude) {\n      getUsersLocation(location.latitude, location.longitude).then(response => response.json()).then(data => console.log(data)).catch(error => console.log(error));\n    }\n  };\n  useEffect(() => {}, [location]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"area\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-box\",\n      children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faLocationDot,\n        onClick: getLocation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"text\",\n        className: \"input\",\n        placeholder: \"Enter your location\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faMagnifyingGlass\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n_s(SearchCity, \"zQAn5ga4Bd9ZblYKMmps4b378R4=\", false, function () {\n  return [useWeatherService];\n});\n_c = SearchCity;\nexport default SearchCity;\nvar _c;\n$RefreshReg$(_c, \"SearchCity\");","map":{"version":3,"names":["FontAwesomeIcon","faLocationDot","faMagnifyingGlass","fontawesome","useState","useEffect","useWeatherService","jsxDEV","_jsxDEV","library","add","SearchCity","_s","location","setLocation","getUsersLocation","getLocationByCity","getLocation","navigator","geolocation","getCurrentPosition","position","latitude","coords","longitude","error","console","log","then","response","json","data","catch","className","children","icon","onClick","fileName","_jsxFileName","lineNumber","columnNumber","type","name","placeholder","_c","$RefreshReg$"],"sources":["/home/oleg/bank-app/src/components/searchCity/SearchCity.js"],"sourcesContent":["import './SearchCity.css'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faLocationDot, faMagnifyingGlass } from '@fortawesome/free-solid-svg-icons';\nimport fontawesome from '@fortawesome/fontawesome'\nimport { useState, useEffect } from 'react';\n\nimport useWeatherService from '../../services/WeatherService';\n\nfontawesome.library.add(faLocationDot, faMagnifyingGlass);\n\nconst SearchCity = () => {\n\n    const [location, setLocation] = useState('Paris');\n    const { getUsersLocation, getLocationByCity } = useWeatherService();\n\n    const getLocation = () => {\n        if (navigator.geolocation) {\n            navigator.geolocation.getCurrentPosition(\n              (position) => {\n                setLocation({\n                  latitude: position.coords.latitude,\n                  longitude: position.coords.longitude,\n                });\n              },\n              (error) => {\n                console.log(error);\n              }\n            );\n          } else {\n            console.log('Geolocation is not supported by this browser.');\n          }\n\n          if (location.latitude && location.longitude) {\n            getUsersLocation(location.latitude, location.longitude)\n              .then((response) => response.json())\n              .then((data) => console.log(data))\n              .catch((error) => console.log(error));\n          }\n    }\n\n      useEffect(() => {\n        \n      }, [location]);\n\n\n    return (\n        <div className=\"area\">\n            <div className=\"search-box\">\n                <FontAwesomeIcon icon={faLocationDot} onClick={getLocation}/>\n                <input type=\"text\" name=\"text\" className=\"input\" placeholder=\"Enter your location\"/>\n                <button type='submit'>\n                    <FontAwesomeIcon icon={faMagnifyingGlass} />\n                </button>\n            </div>\n        </div>\n    )\n}\n\nexport default SearchCity;"],"mappings":";;AAAA,OAAO,kBAAkB;AAEzB,SAASA,eAAe,QAAQ,gCAAgC;AAChE,SAASC,aAAa,EAAEC,iBAAiB,QAAQ,mCAAmC;AACpF,OAAOC,WAAW,MAAM,0BAA0B;AAClD,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,OAAOC,iBAAiB,MAAM,+BAA+B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9DL,WAAW,CAACM,OAAO,CAACC,GAAG,CAACT,aAAa,EAAEC,iBAAiB,CAAC;AAEzD,MAAMS,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAErB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,OAAO,CAAC;EACjD,MAAM;IAAEW,gBAAgB;IAAEC;EAAkB,CAAC,GAAGV,iBAAiB,EAAE;EAEnE,MAAMW,WAAW,GAAGA,CAAA,KAAM;IACtB,IAAIC,SAAS,CAACC,WAAW,EAAE;MACvBD,SAAS,CAACC,WAAW,CAACC,kBAAkB,CACrCC,QAAQ,IAAK;QACZP,WAAW,CAAC;UACVQ,QAAQ,EAAED,QAAQ,CAACE,MAAM,CAACD,QAAQ;UAClCE,SAAS,EAAEH,QAAQ,CAACE,MAAM,CAACC;QAC7B,CAAC,CAAC;MACJ,CAAC,EACAC,KAAK,IAAK;QACTC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MACpB,CAAC,CACF;IACH,CAAC,MAAM;MACLC,OAAO,CAACC,GAAG,CAAC,+CAA+C,CAAC;IAC9D;IAEA,IAAId,QAAQ,CAACS,QAAQ,IAAIT,QAAQ,CAACW,SAAS,EAAE;MAC3CT,gBAAgB,CAACF,QAAQ,CAACS,QAAQ,EAAET,QAAQ,CAACW,SAAS,CAAC,CACpDI,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAKL,OAAO,CAACC,GAAG,CAACI,IAAI,CAAC,CAAC,CACjCC,KAAK,CAAEP,KAAK,IAAKC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAAC;IACzC;EACN,CAAC;EAECpB,SAAS,CAAC,MAAM,CAEhB,CAAC,EAAE,CAACQ,QAAQ,CAAC,CAAC;EAGhB,oBACIL,OAAA;IAAKyB,SAAS,EAAC,MAAM;IAAAC,QAAA,eACjB1B,OAAA;MAAKyB,SAAS,EAAC,YAAY;MAAAC,QAAA,gBACvB1B,OAAA,CAACR,eAAe;QAACmC,IAAI,EAAElC,aAAc;QAACmC,OAAO,EAAEnB;MAAY;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAE,eAC7DhC,OAAA;QAAOiC,IAAI,EAAC,MAAM;QAACC,IAAI,EAAC,MAAM;QAACT,SAAS,EAAC,OAAO;QAACU,WAAW,EAAC;MAAqB;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAE,eACpFhC,OAAA;QAAQiC,IAAI,EAAC,QAAQ;QAAAP,QAAA,eACjB1B,OAAA,CAACR,eAAe;UAACmC,IAAI,EAAEjC;QAAkB;UAAAmC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAG;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACvC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACP;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACJ;AAEd,CAAC;AAAA5B,EAAA,CA9CKD,UAAU;EAAA,QAGoCL,iBAAiB;AAAA;AAAAsC,EAAA,GAH/DjC,UAAU;AAgDhB,eAAeA,UAAU;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}