{"ast":null,"code":"var _jsxFileName = \"/home/oleg/test_zadaniye/Reenbit/weather-app/src/components/app/App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport useWeatherService from \"../../services/WeatherService\";\nimport Trip from \"../trip/Trip\";\nimport Weather from \"../trip/Weather\";\nimport Modal from \"../modal/Modal\";\n\n// function App() {\n//   const [trip, setTrip] = useState({\n//     \"image\": \"https://media.cntraveler.com/photos/5a85a6cc833f8a477b94953e/master/w_1920%2Cc_limit/Musee-Picasso_Fabien-Campoverde_2018_BH4A5113fab.jpg\",\n//     \"city\": \"Kyiv\",\n//     \"date1\": \"20.08.2023\",\n//     \"date2\": \"26.08.2023\"\n//   });\n//   const [trips, setTrips] = useState([]);\n//   const [weekWeather, setWeekWeather] = useState()\n//   const [weather, setWeather] = useState({});\n//   const [modal, setModal] = useState('hidden');\n//   const { getForecast, getTodaysWeather } = useWeatherService();\n\n//   const transformDateFormat = (date) => {\n//     let [day, month, year] = date.split(\".\");\n//     return [year, month - 1, day].join('-')\n//   }\n\n//   useEffect(() => {\n//     const storedData = JSON.parse(localStorage.getItem('cardData'));\n//     if (!storedData || storedData.length === 0 || storedData === null) {\n//       localStorage.setItem('cardData', JSON.stringify([\n//         {\n//           \"image\": \"https://media.cntraveler.com/photos/5a85a6cc833f8a477b94953e/master/w_1920%2Cc_limit/Musee-Picasso_Fabien-Campoverde_2018_BH4A5113fab.jpg\",\n//           \"city\": \"Kyiv\",\n//           \"date1\": \"20.08.2023\",\n//           \"date2\": \"26.08.2023\"\n//         }\n//       ]))\n//     }\n//     setTrips(sortTrips(storedData ? storedData : []));\n//     setTrip(sortTrips(storedData ? storedData : [])[0]);\n//   }, []);\n\n//   useEffect(() => {\n//     if (trip.city !== \"\") {\n//       getTodaysWeather(trip.city)\n//         .then(item => {\n//           setWeather({ temperature: Math.round(item.days[0].temp), icon: item.days[0].icon })\n//         })\n//         .catch(e => console.log(e))\n\n//       getForecast(trip.city, transformDateFormat(trip.date1), transformDateFormat(trip.date2)).then(item => {\n//         setWeekWeather(item.days)\n//       })\n//     }\n//   }, [trip])\n\n//   const addTrips = (image, city, date1, date2) => {\n//     const newTrip = { image, city, date1, date2 };\n//     setTrips((prevData) => sortTrips([...prevData, newTrip]));\n//   };\n\n//   useEffect(() => {\n//     if (trips.length > 0) {\n//       localStorage.setItem(\"cardData\", JSON.stringify(trips));\n//     }\n//   }, [trips]);\n\n//   // Сортируем поездки по начальной дате\n//   const sortTrips = (arr) => [...arr].sort((a, b) => {\n//     const dateA = new Date(a.date1.split(\".\").reverse().join(\"-\"));\n//     const dateB = new Date(b.date1.split(\".\").reverse().join(\"-\"));\n//     return dateA - dateB;\n//   });\n\n//   return (\n//     <div className=\"App\">\n//       <Trip weekWeather={weekWeather} trips={trips} setTrip={setTrip} setModal={setModal} />\n//       <Weather weather={weather} trip={trip} />\n//       <Modal modal={modal} addTrips={addTrips} setModal={setModal} />\n//     </div>\n//   );\n// }\n\n// Bring in the GoogleLogin\n// component from the library\nimport { GoogleLogin } from '@react-oauth/google';\n\n// Import this from the lib\nimport { useGoogleLogin } from '@react-oauth/google';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // Use this function to trigger the\n  // \"LogIn With Google\" process\n  // at the end of which the onSuccess function\n  // is triggered\n  const login = useGoogleLogin({\n    onSuccess: codeResponse => console.log(codeResponse)\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => login(),\n        children: \"Log In Using Google\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"zY/v83cBMrwD3I51qGaOiRFUBvU=\", false, function () {\n  return [useGoogleLogin];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","useWeatherService","Trip","Weather","Modal","GoogleLogin","useGoogleLogin","jsxDEV","_jsxDEV","App","_s","login","onSuccess","codeResponse","console","log","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/oleg/test_zadaniye/Reenbit/weather-app/src/components/app/App.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport useWeatherService from \"../../services/WeatherService\";\nimport Trip from \"../trip/Trip\";\nimport Weather from \"../trip/Weather\";\nimport Modal from \"../modal/Modal\";\n\n// function App() {\n//   const [trip, setTrip] = useState({\n//     \"image\": \"https://media.cntraveler.com/photos/5a85a6cc833f8a477b94953e/master/w_1920%2Cc_limit/Musee-Picasso_Fabien-Campoverde_2018_BH4A5113fab.jpg\",\n//     \"city\": \"Kyiv\",\n//     \"date1\": \"20.08.2023\",\n//     \"date2\": \"26.08.2023\"\n//   });\n//   const [trips, setTrips] = useState([]);\n//   const [weekWeather, setWeekWeather] = useState()\n//   const [weather, setWeather] = useState({});\n//   const [modal, setModal] = useState('hidden');\n//   const { getForecast, getTodaysWeather } = useWeatherService();\n\n//   const transformDateFormat = (date) => {\n//     let [day, month, year] = date.split(\".\");\n//     return [year, month - 1, day].join('-')\n//   }\n\n//   useEffect(() => {\n//     const storedData = JSON.parse(localStorage.getItem('cardData'));\n//     if (!storedData || storedData.length === 0 || storedData === null) {\n//       localStorage.setItem('cardData', JSON.stringify([\n//         {\n//           \"image\": \"https://media.cntraveler.com/photos/5a85a6cc833f8a477b94953e/master/w_1920%2Cc_limit/Musee-Picasso_Fabien-Campoverde_2018_BH4A5113fab.jpg\",\n//           \"city\": \"Kyiv\",\n//           \"date1\": \"20.08.2023\",\n//           \"date2\": \"26.08.2023\"\n//         }\n//       ]))\n//     }\n//     setTrips(sortTrips(storedData ? storedData : []));\n//     setTrip(sortTrips(storedData ? storedData : [])[0]);\n//   }, []);\n\n//   useEffect(() => {\n//     if (trip.city !== \"\") {\n//       getTodaysWeather(trip.city)\n//         .then(item => {\n//           setWeather({ temperature: Math.round(item.days[0].temp), icon: item.days[0].icon })\n//         })\n//         .catch(e => console.log(e))\n\n//       getForecast(trip.city, transformDateFormat(trip.date1), transformDateFormat(trip.date2)).then(item => {\n//         setWeekWeather(item.days)\n//       })\n//     }\n//   }, [trip])\n\n//   const addTrips = (image, city, date1, date2) => {\n//     const newTrip = { image, city, date1, date2 };\n//     setTrips((prevData) => sortTrips([...prevData, newTrip]));\n//   };\n\n//   useEffect(() => {\n//     if (trips.length > 0) {\n//       localStorage.setItem(\"cardData\", JSON.stringify(trips));\n//     }\n//   }, [trips]);\n\n//   // Сортируем поездки по начальной дате\n//   const sortTrips = (arr) => [...arr].sort((a, b) => {\n//     const dateA = new Date(a.date1.split(\".\").reverse().join(\"-\"));\n//     const dateB = new Date(b.date1.split(\".\").reverse().join(\"-\"));\n//     return dateA - dateB;\n//   });\n\n//   return (\n//     <div className=\"App\">\n//       <Trip weekWeather={weekWeather} trips={trips} setTrip={setTrip} setModal={setModal} />\n//       <Weather weather={weather} trip={trip} />\n//       <Modal modal={modal} addTrips={addTrips} setModal={setModal} />\n//     </div>\n//   );\n// }\n\n// Bring in the GoogleLogin\n// component from the library\nimport { GoogleLogin } from '@react-oauth/google';\n\n// Import this from the lib\nimport { useGoogleLogin } from '@react-oauth/google';\n\nfunction App() {\n\n  // Use this function to trigger the\n  // \"LogIn With Google\" process\n  // at the end of which the onSuccess function\n  // is triggered\n  const login = useGoogleLogin({\n    onSuccess: codeResponse => console.log(codeResponse)\n  });\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n\n        {/* This is my button. Its just a regular HTML Button */}\n\n        <button onClick={() => login()}>\n          Log In Using Google\n        </button>\n\n      </header>\n    </div>\n  );\n}\nexport default App;"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,iBAAiB,MAAM,+BAA+B;AAC7D,OAAOC,IAAI,MAAM,cAAc;AAC/B,OAAOC,OAAO,MAAM,iBAAiB;AACrC,OAAOC,KAAK,MAAM,gBAAgB;;AAElC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAASC,WAAW,QAAQ,qBAAqB;;AAEjD;AACA,SAASC,cAAc,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb;EACA;EACA;EACA;EACA,MAAMC,KAAK,GAAGL,cAAc,CAAC;IAC3BM,SAAS,EAAEC,YAAY,IAAIC,OAAO,CAACC,GAAG,CAACF,YAAY;EACrD,CAAC,CAAC;EAEF,oBACEL,OAAA;IAAKQ,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClBT,OAAA;MAAQQ,SAAS,EAAC,YAAY;MAAAC,QAAA,eAI5BT,OAAA;QAAQU,OAAO,EAAEA,CAAA,KAAMP,KAAK,EAAG;QAAAM,QAAA,EAAC;MAEhC;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAS;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAEF;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACL;AAEV;AAACZ,EAAA,CAvBQD,GAAG;EAAA,QAMIH,cAAc;AAAA;AAAAiB,EAAA,GANrBd,GAAG;AAwBZ,eAAeA,GAAG;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}