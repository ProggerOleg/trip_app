{"ast":null,"code":"var _jsxFileName = \"/home/oleg/bank-app/src/components/app/App.js\",\n  _s = $RefreshSig$();\nimport Weather from \"../weather/Weather\";\nimport SearchCity from \"../searchCity/SearchCity\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [location, setLocation] = useState({});\n  const [city, setCity] = useState('');\n  const [weather, setWeather] = useState({});\n  useEffect(() => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        setLocation({\n          latitude: position.coords.latitude,\n          longitude: position.coords.longitude\n        });\n      }, error => {\n        console.log(error);\n      });\n    } else {\n      console.log('Geolocation is not supported by this browser.');\n    }\n  }, []);\n  const getLocation = location => {\n    console.log('Click');\n    if (location.latitude && location.longitude) {\n      getForecast(location.latitude, location.longitude).then(_ref => {\n        let {\n          city,\n          weather\n        } = _ref;\n        console.log({\n          city,\n          weather\n        });\n        setCity(city);\n        setWeather(everyEighth(weather));\n      }).catch(error => console.log(error));\n    }\n  };\n  function everyEighth(arr) {\n    return arr.filter((_, i) => (i + 1) % 8 === 0);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(SearchCity, {\n      getLocation: getLocation\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Weather, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ezBgD4ppMqvbsH6qLGvF1aKJwxg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Weather","SearchCity","jsxDEV","_jsxDEV","App","_s","location","setLocation","useState","city","setCity","weather","setWeather","useEffect","navigator","geolocation","getCurrentPosition","position","latitude","coords","longitude","error","console","log","getLocation","getForecast","then","_ref","everyEighth","catch","arr","filter","_","i","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/oleg/bank-app/src/components/app/App.js"],"sourcesContent":["import Weather from \"../weather/Weather\";\nimport SearchCity from \"../searchCity/SearchCity\";\n\nfunction App() {\n\n\n  const [location, setLocation] = useState({});\n  const [city, setCity] = useState('');\n  const [weather, setWeather] = useState({})\n\n  useEffect(() => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(\n        (position) => {\n          setLocation({\n            latitude: position.coords.latitude,\n            longitude: position.coords.longitude,\n          });\n        },\n        (error) => {\n          console.log(error);\n        }\n      );\n    } else {\n      console.log('Geolocation is not supported by this browser.');\n    }\n  }, []);\n\n  const getLocation = (location) => {\n      console.log('Click');\n      \n      if (location.latitude && location.longitude) {\n          getForecast(location.latitude, location.longitude)\n              .then(({city, weather}) => {\n                  console.log({city, weather});\n                  setCity(city);\n                  setWeather(everyEighth(weather));\n              })\n              .catch((error) => console.log(error));\n          }\n  }\n\n  function everyEighth(arr) {\n    return arr.filter((_, i) => (i + 1) % 8 === 0);\n  }\n\n  return (\n    <div className=\"App\">\n      <SearchCity getLocation={getLocation}/>\n      <Weather/>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,OAAO,MAAM,oBAAoB;AACxC,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAGb,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGC,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGF,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACG,OAAO,EAAEC,UAAU,CAAC,GAAGJ,QAAQ,CAAC,CAAC,CAAC,CAAC;EAE1CK,SAAS,CAAC,MAAM;IACd,IAAIC,SAAS,CAACC,WAAW,EAAE;MACzBD,SAAS,CAACC,WAAW,CAACC,kBAAkB,CACrCC,QAAQ,IAAK;QACZV,WAAW,CAAC;UACVW,QAAQ,EAAED,QAAQ,CAACE,MAAM,CAACD,QAAQ;UAClCE,SAAS,EAAEH,QAAQ,CAACE,MAAM,CAACC;QAC7B,CAAC,CAAC;MACJ,CAAC,EACAC,KAAK,IAAK;QACTC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MACpB,CAAC,CACF;IACH,CAAC,MAAM;MACLC,OAAO,CAACC,GAAG,CAAC,+CAA+C,CAAC;IAC9D;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,WAAW,GAAIlB,QAAQ,IAAK;IAC9BgB,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;IAEpB,IAAIjB,QAAQ,CAACY,QAAQ,IAAIZ,QAAQ,CAACc,SAAS,EAAE;MACzCK,WAAW,CAACnB,QAAQ,CAACY,QAAQ,EAAEZ,QAAQ,CAACc,SAAS,CAAC,CAC7CM,IAAI,CAACC,IAAA,IAAqB;QAAA,IAApB;UAAClB,IAAI;UAAEE;QAAO,CAAC,GAAAgB,IAAA;QAClBL,OAAO,CAACC,GAAG,CAAC;UAACd,IAAI;UAAEE;QAAO,CAAC,CAAC;QAC5BD,OAAO,CAACD,IAAI,CAAC;QACbG,UAAU,CAACgB,WAAW,CAACjB,OAAO,CAAC,CAAC;MACpC,CAAC,CAAC,CACDkB,KAAK,CAAER,KAAK,IAAKC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAAC;IACzC;EACR,CAAC;EAED,SAASO,WAAWA,CAACE,GAAG,EAAE;IACxB,OAAOA,GAAG,CAACC,MAAM,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK,CAACA,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;EAChD;EAEA,oBACE9B,OAAA;IAAK+B,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBhC,OAAA,CAACF,UAAU;MAACuB,WAAW,EAAEA;IAAY;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE,eACvCpC,OAAA,CAACH,OAAO;MAAAoC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACN;AAEV;AAAClC,EAAA,CAjDQD,GAAG;AAAAoC,EAAA,GAAHpC,GAAG;AAmDZ,eAAeA,GAAG;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}