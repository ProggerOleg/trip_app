{"ast":null,"code":"var _jsxFileName = \"/home/oleg/bank-app/src/components/searchCity/SearchCity.js\",\n  _s = $RefreshSig$();\nimport './SearchCity.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faLocationDot, faMagnifyingGlass } from '@fortawesome/free-solid-svg-icons';\nimport fontawesome from '@fortawesome/fontawesome';\nimport { useState, useEffect } from 'react';\nimport useWeatherService from '../../services/WeatherService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfontawesome.library.add(faLocationDot, faMagnifyingGlass);\nconst SearchCity = () => {\n  _s();\n  const [location, setLocation] = useState({});\n  const [city, setCity] = useState('');\n  const [weather, setWeather] = useState({});\n  const {\n    getForecast,\n    getLocationByCity\n  } = useWeatherService();\n  useEffect(() => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        setLocation({\n          latitude: position.coords.latitude,\n          longitude: position.coords.longitude\n        });\n      }, error => {\n        console.log(error);\n      });\n    } else {\n      console.log('Geolocation is not supported by this browser.');\n    }\n  }, []);\n  const getLocation = location => {\n    console.log('Click');\n    if (location.latitude && location.longitude) {\n      getForecast(location.latitude, location.longitude).then(_ref => {\n        let {\n          city,\n          weather\n        } = _ref;\n        setCity(city);\n        setWeather(weather);\n      }).catch(error => console.log(error));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(View, {\n    getLocation: getLocation,\n    data: weather,\n    city: city\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n_s(SearchCity, \"aCEZ91NMJAqqZxXWRnm4nJV7zNg=\", false, function () {\n  return [useWeatherService];\n});\n_c = SearchCity;\nconst View = (city, data, getLocation) => {\n  const {\n    humidity,\n    icon,\n    precipitation,\n    temperature,\n    weather,\n    wind\n  } = data;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"area\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-box\",\n      children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faLocationDot,\n        onClick: () => getLocation(city)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"text\",\n        className: \"input\",\n        placeholder: \"Enter your location\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faMagnifyingGlass\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n};\n_c2 = View;\nexport default SearchCity;\nvar _c, _c2;\n$RefreshReg$(_c, \"SearchCity\");\n$RefreshReg$(_c2, \"View\");","map":{"version":3,"names":["FontAwesomeIcon","faLocationDot","faMagnifyingGlass","fontawesome","useState","useEffect","useWeatherService","jsxDEV","_jsxDEV","library","add","SearchCity","_s","location","setLocation","city","setCity","weather","setWeather","getForecast","getLocationByCity","navigator","geolocation","getCurrentPosition","position","latitude","coords","longitude","error","console","log","getLocation","then","_ref","catch","View","data","fileName","_jsxFileName","lineNumber","columnNumber","_c","humidity","icon","precipitation","temperature","wind","className","children","onClick","type","name","placeholder","_c2","$RefreshReg$"],"sources":["/home/oleg/bank-app/src/components/searchCity/SearchCity.js"],"sourcesContent":["import './SearchCity.css'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faLocationDot, faMagnifyingGlass } from '@fortawesome/free-solid-svg-icons';\nimport fontawesome from '@fortawesome/fontawesome'\nimport { useState, useEffect } from 'react';\n\nimport useWeatherService from '../../services/WeatherService';\n\nfontawesome.library.add(faLocationDot, faMagnifyingGlass);\n\nconst SearchCity = () => {\n\n    const [location, setLocation] = useState({});\n    const [city, setCity] = useState('');\n    const [weather, setWeather] = useState({})\n\n\n    const { getForecast, getLocationByCity } = useWeatherService();\n\n    useEffect(() => {\n        if (navigator.geolocation) {\n          navigator.geolocation.getCurrentPosition(\n            (position) => {\n              setLocation({\n                latitude: position.coords.latitude,\n                longitude: position.coords.longitude,\n              });\n            },\n            (error) => {\n              console.log(error);\n            }\n          );\n        } else {\n          console.log('Geolocation is not supported by this browser.');\n        }\n      }, []);\n\n    const getLocation = (location) => {\n        console.log('Click');\n        \n        if (location.latitude && location.longitude) {\n            getForecast(location.latitude, location.longitude)\n                .then(({city, weather}) => {\n                    setCity(city);\n                    setWeather(weather);\n                })\n                .catch((error) => console.log(error));\n            }\n    }\n\n    return (\n        <View getLocation={getLocation}\n                data={weather}\n                city={city}/>\n    )\n}\n\n\nconst View = (city, data, getLocation) => {\n    const {humidity, icon, precipitation, temperature, weather, wind} = data;\n\n    return (\n        <div className=\"area\">\n            <div className=\"search-box\">\n                <FontAwesomeIcon icon={faLocationDot} onClick={() => getLocation(city)}/>\n                <input type=\"text\" name=\"text\" className=\"input\" placeholder=\"Enter your location\"/>\n                <button type='submit'>\n                    <FontAwesomeIcon icon={faMagnifyingGlass} />\n                </button>\n            </div>\n        </div>\n    )\n}\nexport default SearchCity;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}